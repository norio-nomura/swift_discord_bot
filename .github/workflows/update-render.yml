name: Update Render

on:
  pull_request:
    branches:
      - main
  schedule:
    - cron: "20 0,3,6,9,12,15,18,21 * * *"
  workflow_dispatch:
    inputs:
      force-update:
        description: Specify id or `all` to force updating render
        required: false

jobs:
  update_render:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        id: ['nightly', '5.7', '5.6', '5.5', '5.4', '5.3', '5.2', '5.1', '5.0', '4.2']
        include:
          - id: 'nightly'
            swift_webroot: 'https://download.swift.org/development/ubuntu2004'

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Using default '1' causes creating detached branch on Forrce Push Commit.
          ref: swift/${{ matrix.id }}

      - name: Check Commit
        if: ${{ !inputs.force-update }}
        id: check-commit
        run: |
          timestamp=$(git show -s --format=%ct) &&
          echo "timestamp=${timestamp}" >> $GITHUB_OUTPUT

      - name: Check Docker Image
        if: ${{ !inputs.force-update && !startsWith(matrix.swift_webroot, 'https:') }}
        id: check-image
        env:
          ID: ${{ matrix.id }}
          REPOSITORY: ${{ matrix.repository }}
          TAG: ${{ matrix.tag }}
        run: |
          REPOSITORY=${REPOSITORY:-library/swift}
          TAG=${TAG:-${ID}}
          endpoint="https://hub.docker.com/v2/repositories/${REPOSITORY}/tags/${TAG}"
          tag_last_pushed=$(curl --silent "${endpoint}"|jq -r .tag_last_pushed) &&
          timestamp=$(date -d "${tag_last_pushed}" "+%s") &&
          echo "timestamp=${timestamp}" >> $GITHUB_OUTPUT

      - name: Check Development Snapshots
        if: ${{ !inputs.force-update && startsWith(matrix.swift_webroot, 'https:') }}
        id: check-snapshot
        run: |
          endpoint="${{ matrix.swift_webroot }}/latest-build.yml"
          latest_build_date=$(curl --silent "${endpoint}"|sed -n '/^date:/s/date: *//p') &&
          timestamp=$(date -d "${latest_build_date}" "+%s") &&
          echo "timestamp=${timestamp}" >> $GITHUB_OUTPUT

      - name: Verify Timestamps
        if: >
          !inputs.force-update &&
          (
            steps.check-commit.outputs.timestamp == null ||
            (steps.check-image.outputs.timestamp == null && steps.check-snapshot.outputs.timestamp == null )
          )
        run: |
          echo "steps.check-commit.outputs.timestamp: ${{ steps.check-commit.outputs.timestamp }}"
          echo "steps.check-image.outputs.timestamp: ${{ steps.check-image.outputs.timestamp }}"
          echo "steps.check-snapshot.outputs.timestamp: ${{ steps.check-snapshot.outputs.timestamp }}"
          false

      - name: Build Render Secret Name
        id: render-secret-name
        env:
          ID: ${{ matrix.id }}
        run: |
          echo "api_key=RENDER_API_KEY_${ID/.}" >> $GITHUB_OUTPUT
          echo "service_id=RENDER_SERVICE_ID_${ID/.}" >> $GITHUB_OUTPUT

      - name: Trigger Deploy And Force Push Commit
        if: >
          contains(inputs.force-update, 'all') ||
          contains(inputs.force-update, matrix.id)  ||
          steps.check-commit.outputs.timestamp < steps.check-image.outputs.timestamp ||
          steps.check-commit.outputs.timestamp < steps.check-snapshot.outputs.timestamp
        env:
          RENDER_API_KEY: ${{ secrets[steps.render-secret-name.outputs.api_key] }}
          RENDER_SERVICE_ID: ${{ secrets[steps.render-secret-name.outputs.service_id] }}
        run: |
          test -n "${RENDER_API_KEY}" -a -n "${RENDER_SERVICE_ID}"
          curl --request POST \
          --url https://api.render.com/v1/services/${RENDER_SERVICE_ID}/deploys \
          --header 'accept: application/json' \
          --header "authorization: Bearer ${RENDER_API_KEY}" \
          --header 'content-type: application/json' \
          --data '{"clearCache": "clear"}'
          git config user.name github-actions
          git config user.email github-actions@github.com
          git commit --amend --no-edit
          git push --force
