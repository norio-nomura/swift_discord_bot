name: Update Branches

on:
  pull_request:
    branches:
      - main
  schedule:
    - cron: "20 0,3,6,9,12,15,18,21 * * *"
  workflow_dispatch:
    inputs:
      force-update:
        description: Specify id or `all` to force updating branches
        required: false

jobs:
  update_branches:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      max-parallel: 1
      matrix:
        id: ["4.0", "4.1", "4.2", "5.0", "5.1", "5.2", "5.3", "5.4", "5.5", "5.6", "5.7", "5.8", "5.9", "5.10", "6.0", "6.1", "main"]
        repository: ["library/swift"]
        tag: [""]
        include:
          - id: 'main'
            swift_webroot: 'https://download.swift.org/development/ubuntu2404'

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Using default '1' causes creating detached branch on Forrce Push Commit.
          ref: swift/${{ matrix.id }}
          token: ${{ secrets.TOKEN_TO_TRIGGER_PUSH_EVENTS }}

      - name: Check Commit
        if: ${{ !inputs.force-update }}
        id: check-commit
        run: |
          timestamp=$(git show -s --format=%ct) &&
          echo "timestamp=${timestamp}" >> $GITHUB_OUTPUT

      - name: Check Docker Image
        if: ${{ !inputs.force-update && !startsWith(matrix.swift_webroot, 'https:') }}
        id: check-image
        env:
          ID: ${{ matrix.id }}
          REPOSITORY: ${{ matrix.repository }}
          TAG: ${{ matrix.tag }}
        run: |
          REPOSITORY=${REPOSITORY:-library/swift}
          TAG=${TAG:-${ID}}
          endpoint="https://hub.docker.com/v2/repositories/${REPOSITORY}/tags/${TAG}"
          tag_last_pushed=$(curl --silent "${endpoint}"|jq -r .tag_last_pushed) &&
          timestamp=$(date -d "${tag_last_pushed}" "+%s") &&
          echo "timestamp=${timestamp}" >> $GITHUB_OUTPUT

      - name: Check Development Snapshots
        if: ${{ !inputs.force-update && startsWith(matrix.swift_webroot, 'https:') }}
        id: check-snapshot
        run: |
          endpoint="${{ matrix.swift_webroot }}/latest-build.yml"
          latest_build_date=$(curl --silent "${endpoint}"|sed -n '/^date:/s/date: *//p') &&
          timestamp=$(date -d "${latest_build_date}" "+%s") &&
          echo "timestamp=${timestamp}" >> $GITHUB_OUTPUT

      - name: Verify Timestamps
        if: >
          !inputs.force-update && (
            steps.check-commit.outputs.timestamp == null ||
            (steps.check-image.outputs.timestamp == null && steps.check-snapshot.outputs.timestamp == null )
          )
        run: |
          echo "steps.check-commit.outputs.timestamp: ${{ steps.check-commit.outputs.timestamp }}"
          echo "steps.check-image.outputs.timestamp: ${{ steps.check-image.outputs.timestamp }}"
          echo "steps.check-snapshot.outputs.timestamp: ${{ steps.check-snapshot.outputs.timestamp }}"
          false

      - name: Update Swift SDKs
        id: update-swift-sdks
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          [[ -x ./update-swift-sdks.sh ]] || exit 0 # Some branches may not have the script
          git config user.name github-actions
          git config user.email github-actions@github.com
          ./update-swift-sdks.sh
          git add swift-sdks.txt
          if ! git diff --cached --quiet; then
            commit_message="Update Swift SDKs"
            last_commit_subject=$(git log -1 --pretty=%s)
            [[ "$commit_message" == "$last_commit_subject" ]] || git commit -m "$commit_message"
            echo "updated=true" >> $GITHUB_OUTPUT
          fi

      - name: Force Push Commit
        if: >
          contains(inputs.force-update, 'all') || contains(inputs.force-update, matrix.id)  || steps.check-commit.outputs.timestamp < steps.check-image.outputs.timestamp || steps.check-commit.outputs.timestamp < steps.check-snapshot.outputs.timestamp || steps.update-swift-sdks.outputs.updated == 'true'
        run: |
          git commit --amend --no-edit
          git push --force
