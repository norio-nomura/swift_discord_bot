#!/bin/bash -eu
. swift-bot-helper

prevent_recursive_execution "$@"
skip_to_next_if_executed swiftc "$@"
# shellcheck disable=SC2310
prepare_next_commands "$@" && shift ${#next_commands[@]}

# becasue swift-testing requires an executable file to getting the test entry points, use swiftc
export USE_SWIFTC=1

code=$(cat)
# check if "import Testing" is present in the code, prepare to prepend it
grep -q "^import Testing$" <<<"${code}" || import=$'import Testing\n'

entry_point_method="Testing.__swiftPMEntryPoint()"
if [[ ${code} != *"${entry_point_method}"* ]]; then
	entry_point_call="await ${entry_point_method} as Never"
	# check if -parse-as-library is present in the arguments, use @main struct
	[[ " $* " == *" -parse-as-library "* ]] && entry_point_call=$(
		cat <<-EOF
			@main struct Runner {
				static func main() async {
					${entry_point_call}
				}
			}
		EOF
	)
fi

call_next_commands "$@" <<-EOF
	${import}${code}
	${entry_point_call}
EOF
