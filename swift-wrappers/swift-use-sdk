#!/bin/bash -eu
. swift-bot-helper

# parse $1 as deployment target if it is a number
if [[ ${1:-} =~ [0-9]+\.[0-9]+ ]]; then
	darwin_deployment_target="${1}"
	shift
elif [[ ${1:-} == "--list-targets" ]]; then
	echo ios iphone ios-simulator iphonesimulator macos ios-macabi iosmac mac-catalyst wasi wasip1 wasm wasm32 musl static
	exit
fi

skip_to_next_if_executed exec "$@"
# shellcheck disable=SC2310
prepare_next_commands "$@" && shift ${#next_commands[@]}

darwin_arch=$(arch)
darwin_arch=${darwin_arch/aarch64/arm64}

case "${current_command}" in
ios | iphone)
	sdk_triple="${darwin_arch}-apple-ios"
	target_triple="${darwin_arch}-apple-ios{darwin_deployment_target}"
	;;
ios-simulator | iphonesimulator)
	sdk_triple="${darwin_arch}-apple-ios-simulator"
	target_triple="${darwin_arch}-apple-ios{darwin_deployment_target}-simulator"
	;;
macos)
	sdk_triple="${darwin_arch}-apple-macosx"
	target_triple="${darwin_arch}-apple-macosx{darwin_deployment_target}"
	;;
ios-macabi | iosmac | mac-catalyst)
	sdk_triple="${darwin_arch}-apple-macosx"
	target_triple="${darwin_arch}-apple-ios{darwin_deployment_target}-macabi"
	darwin_platform_name="iosmac"
	;;
wasi | wasip1 | wasm | wasm32)
	sdk_triple="wasm32-unknown-wasi"
	target_triple="${sdk_triple}"
	# because swift does not support executing wasm, use swiftc
	export USE_SWIFTC=1
	;;
musl | static)
	sdk_triple="$(arch)-swift-linux-musl"
	target_triple="${sdk_triple}"
	;;
*)
	error_exit "${0}" "Unknown target: ${current_command}"
	;;
esac

# embed deployment target for darwin platform if it is required
if [[ ${target_triple} == *"{darwin_deployment_target}"* ]]; then
	# Detect default deployment target from SDKSettings.json
	[[ -z ${darwin_deployment_target:-} ]] && darwin_deployment_target=$(
		swift-darwin-deployment-target "${sdk_triple}" "${darwin_platform_name:-}"
	)
	target_triple=${target_triple//\{darwin_deployment_target\}/${darwin_deployment_target}}
fi

export USE_SWIFT_TARGET_TRIPLE=${target_triple}
call_next_commands "${swift_args_for_sdk[@]}" "$@"
